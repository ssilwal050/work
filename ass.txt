#################### MV HWK 1###########################


library(MASS)
library(ellipse)
library(mixtools)

# A matrix
A <- matrix(c(1, 1, 2, -1), nrow = 2, byrow = TRUE)

# mean vector
u <- matrix(c(1, 5), ncol = 1, byrow = FALSE)

# covariance matrix
sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2, byrow = TRUE)

# mean of AX
Mean.AX <- A%*%u
Mean.AX

# covariance of AX
Cov.AX <- A%*%sigma%*%t(A)
Cov.A



# conditional mean = mu1 + sigma12/sigma22(x-mu2)
sigma11 <- sigma[1,1]
sigma12 <- sigma[1,2]
sigma22 <- sigma[2,2]
Cov.X1.X2 <- sigma11 - ((sigma12)^2)/sigma22


  
# eigen value of sigma
e.value <- eigen(sigma)$values
e.value

# eigen vectors of sigma
e.vec <- eigen(sigma)$vectors
e.vec



# c value
c <- sqrt(qchisq(0.95, 2))

# major axis
major.axis1 <- u - c*sqrt(e.value[1])*matrix(e.vec[,1])
major.axis1
major.axis2 <- u + c*sqrt(e.value[1])*matrix(e.vec[,1])
major.axis2

# minor axis
minor.axis1 <- u - c*sqrt(e.value[2])*matrix(e.vec[,2])
minor.axis1
minor.axis2 <- u + c*sqrt(e.value[2])*matrix(e.vec[,2])
minor.axis2

ellipse(c(1,5), sigma, alpha=0.05, npoints = 100, newplot=TRUE,
        draw=TRUE, type="l", main="95% Probability Contour Plot")
points(1,5, pch=4)

# major axis
x1 <- u[1] + c*sqrt(e.value[1])*matrix(e.vec[1,1])
y1 <- u[2] + c*sqrt(e.value[1])*matrix(e.vec[2,1])
x2 <- u[1] - c*sqrt(e.value[1])*matrix(e.vec[1,1])
y2 <- u[2] - c*sqrt(e.value[1])*matrix(e.vec[2,1])

# minor axis
x3 <- u[1] + c*sqrt(e.value[2])*matrix(e.vec[1,2])
y3 <- u[2] + c*sqrt(e.value[2])*matrix(e.vec[2,2])
x4 <- u[1] - c*sqrt(e.value[2])*matrix(e.vec[1,2])
y4 <- u[2] - c*sqrt(e.value[2])*matrix(e.vec[2,2])
points(x1, y1)
points(x2, y2)
points(x3, y3)
points(x4, y4)

segments(x1, y1, x2, y2, col = 'blue')
segments(x3, y3, x4, y4, col = 'blue')


########################################################################################################hhhhhhhwwwwkk2###############
library(GLMsData)
library(dplyr)
data(quilpie)
m1<- glm(y~SOI,family = binomial,data = quilpie)
summary(m1)
beta<- m1$coefficients
b0 <- m1$coefficients[1]
b1 <- m1$coefficients[2]

mu <- exp(b0+b1*quilpie$SOI)/(1+exp(b0+b1*quilpie$SOI))
mu
sf <- sum(quilpie$y-mu)
sf
sf1 <- sum((quilpie$y-mu)*quilpie$SOI)
sf1

x <- quilpie$SOI
j00<- sum(mu*(1-mu))
j00
j11<- sum( mu*(1-mu)*(x^2) )
j11
j01<- sum( mu*(1-mu)*x)
j01
fisher <-  matrix(c(j00,j01,j01,j11),2,2,byrow = TRUE)
fisher
se_beta <- c(sqrt(1/j00),sqrt(1/j11))
se_beta

b1 + abs(qnorm(p=0.025))*se_beta[2]
b1 - abs(qnorm(p=0.025))*se_beta[2]

c <- matrix(c(1,3),1,2,byrow = TRUE)
c
var_beta<- c%*%solve(fisher)%*%t(c)
var_beta
sebeta <- sqrt(var_beta)


c%*%beta + abs(qnorm(p=0.025))*sebeta
c%*%beta - abs(qnorm(p=0.025))*sebeta


S <- sf1^2/j11
S

leuk <- leukwbc
head(leuk)
# dividing WBC by 1000
leuk1 <- leuk %>%
  mutate(WBC.NEW = WBC / 1000)

head(leuk1)

m2 <- glm(Time~WBC.NEW,family = Gamma(link = "log"),data = leuk1)
summary(m2)
new.b <- m2$coefficients
bb0 <- m2$coefficients[1]
bb1 <- m2$coefficients[2]

# score function
u_b0 <- -dim(leuk1)[1] + sum( (leuk1$Time)/exp(bb0 + bb1*leuk1$WBC.NEW) )
u_b0

u_b1 <- -dim(leuk1)[1]*mean(leuk1$WBC.NEW) + sum( (leuk1$Time*leuk1$WBC.NEW)/exp(bb0 + bb1*leuk1$WBC.NEW) )
u_b1

#  observed information matrix
x1 <- leuk1$WBC.NEW
y1 <- leuk1$Time

jj00<- sum((y1)/exp(bb0 + bb1*x1) )
jj00
jj11<- sum(((x1)^2 * y1)/exp(bb0 + bb1*x1) )
jj11
jj01<- sum((x1 * y1)/exp(bb0 + bb1*x1) )
jj01
# obs info mat
obs.mat <-  matrix(c(jj00,jj01,jj01,jj11),nrow = 2,ncol = 2,byrow = TRUE)
obs.mat

# fisher info mat
ii00<- dim(leuk1)[1]
ii00
ii11<- sum( (x1)^2 )
ii11
ii01<- sum(x1)
ii01
fh.mat <-  matrix(c(ii00,ii01,ii01,ii11),nrow = 2,ncol = 2,byrow = TRUE)
fh.mat

# inverse fh.mat
inv.fh.mat <- solve(fh.mat)
inv.fh.mat

se.beta1 <- sqrt(inv.fh.mat[2,2])
se.beta1




# Wald 
W <- bb1/se.beta1
W
round(2*pnorm(-abs(W)), 5)

S <- (bb1)^2 / ( b1*(1-mu0)/n )
S

Lmu0 <- sum( dbinom(quilpie$y, 1, b1, log=TRUE ) )
Lmuhat <- sum( dbinom(quilpie$y, 1, b1, log=TRUE ) )
L <- 2*(Lmuhat - Lmu0)
L


b1 + abs(qnorm(p=0.025))*se_beta[2]
b1 - abs(qnorm(p=0.025))*se_beta[2]











